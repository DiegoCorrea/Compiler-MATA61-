Não-terminais inúteis na gramática

   binop


Terminais sem uso na gramática

   FOR_T
   LBRACKETS
   RBRACKETS
   ERROR


Regras inúteis na gramática

   75 binop: PLUS
   76      | MINUS
   77      | MULTIPLY
   78      | DIVIDER
   79      | LESSTHAN
   80      | LESSOREQUAL
   81      | BIGGERTHAN
   82      | BIGGEROREQUAL
   83      | EQUAL
   84      | NOTEQUAL
   85      | AND
   86      | OR


Estado 13 conflitos: 1 de deslocamento/redução
Estado 20 conflitos: 1 de deslocamento/redução
Estado 24 conflitos: 1 de deslocamento/redução
Estado 29 conflitos: 1 de deslocamento/redução
Estado 31 conflitos: 1 de deslocamento/redução
Estado 32 conflitos: 1 de deslocamento/redução
Estado 33 conflitos: 1 de deslocamento/redução
Estado 34 conflitos: 1 de deslocamento/redução
Estado 35 conflitos: 1 de deslocamento/redução
Estado 36 conflitos: 1 de deslocamento/redução
Estado 37 conflitos: 1 de deslocamento/redução
Estado 38 conflitos: 1 de deslocamento/redução
Estado 39 conflitos: 1 de deslocamento/redução
Estado 40 conflitos: 1 de deslocamento/redução
Estado 41 conflitos: 1 de deslocamento/redução
Estado 42 conflitos: 1 de deslocamento/redução
Estado 43 conflitos: 2 de deslocamento/redução
Estado 47 conflitos: 1 de deslocamento/redução
Estado 49 conflitos: 2 de deslocamento/redução
Estado 50 conflitos: 2 de deslocamento/redução
Estado 51 conflitos: 2 de deslocamento/redução
Estado 52 conflitos: 2 de deslocamento/redução
Estado 53 conflitos: 2 de deslocamento/redução
Estado 54 conflitos: 2 de deslocamento/redução
Estado 55 conflitos: 2 de deslocamento/redução
Estado 56 conflitos: 2 de deslocamento/redução
Estado 57 conflitos: 2 de deslocamento/redução
Estado 58 conflitos: 2 de deslocamento/redução
Estado 59 conflitos: 12 de deslocamento/redução
Estado 60 conflitos: 12 de deslocamento/redução
Estado 68 conflitos: 1 de deslocamento/redução
Estado 83 conflitos: 1 de redução/redução
Estado 89 conflitos: 1 de redução/redução
Estado 100 conflitos: 1 de deslocamento/redução
Estado 101 conflitos: 1 de deslocamento/redução
Estado 110 conflitos: 1 de deslocamento/redução
Estado 114 conflitos: 1 de deslocamento/redução


Gramática

    0 $accept: start $end

    1 $@1: %empty

    2 start: $@1 program

    3 program: decvar program
    4        | decfunc program
    5        | %empty

    6 decvar: LET_T ID decvarassign SEMICOLON

    7 decvarassign: %empty
    8             | ASSIGN expr

    9 $@2: %empty

   10 decfunc: DEF_T $@2 decfuncids

   11 $@3: %empty

   12 $@4: %empty

   13 $@5: %empty

   14 decfuncids: MAIN_T $@3 LPARENT $@4 paramlist $@5 RPARENT block

   15 $@6: %empty

   16 $@7: %empty

   17 $@8: %empty

   18 decfuncids: ID $@6 LPARENT $@7 paramlist $@8 RPARENT block

   19 $@9: %empty

   20 block: LBRACE $@9 blockstatements RBRACE

   21 blockstatements: decvar blockstatements
   22                | statement
   23                | %empty

   24 paramlist: ID

   25 $@10: %empty

   26 paramlist: ID COMMA $@10 paramlist
   27          | %empty

   28 $@11: %empty

   29 statement: assigner $@11 SEMICOLON statement

   30 $@12: %empty

   31 statement: funccall $@12 SEMICOLON statement
   32          | conditional statement
   33          | loop statement
   34          | return
   35          | break
   36          | continue
   37          | %empty

   38 assigner: ID ASSIGN expr
   39         | %empty

   40 conditional: IF_T LPARENT expr RPARENT block ELSE_T block
   41            | IF_T LPARENT expr RPARENT block

   42 $@13: %empty

   43 loop: WHILE_T $@13 LPARENT expr RPARENT block

   44 break: BREAK_T SEMICOLON

   45 continue: CONTINUE_T SEMICOLON

   46 $@14: %empty

   47 return: $@14 RETURN_T expr SEMICOLON

   48 expr: unop expr
   49     | LPARENT expr RPARENT
   50     | funccall
   51     | DEC
   52     | ID
   53     | expr PLUS expr
   54     | expr MINUS expr
   55     | expr MULTIPLY expr
   56     | expr DIVIDER expr
   57     | expr LESSTHAN expr
   58     | expr LESSOREQUAL expr
   59     | expr BIGGERTHAN expr
   60     | expr BIGGEROREQUAL expr
   61     | expr EQUAL expr
   62     | expr NOTEQUAL expr
   63     | expr AND expr
   64     | expr OR expr
   65     | %empty

   66 unop: MINUS
   67     | NOT

   68 funccall: ID LPARENT RPARENT

   69 $@15: %empty

   70 $@16: %empty

   71 funccall: ID LPARENT $@15 arglist $@16 RPARENT

   72 arglist: expr arglistparams

   73 arglistparams: %empty
   74              | COMMA arglist


Terminais, com as regras onde eles aparecem

$end (0) 0
error (256)
ID (258) 6 18 24 26 38 52 68 71
DEC (259) 51
LET_T (260) 6
DEF_T (261) 10
MAIN_T (262) 14
IF_T (263) 40 41
ELSE_T (264) 40
WHILE_T (265) 43
FOR_T (266)
BREAK_T (267) 44
CONTINUE_T (268) 45
RETURN_T (269) 47
LPARENT (270) 14 18 40 41 43 49 68 71
RPARENT (271) 14 18 40 41 43 49 68 71
LBRACE (272) 20
RBRACE (273) 20
LBRACKETS (274)
RBRACKETS (275)
COMMA (276) 26 74
SEMICOLON (277) 6 29 31 44 45 47
PLUS (278) 53
MINUS (279) 54 66
MULTIPLY (280) 55
DIVIDER (281) 56
LESSTHAN (282) 57
BIGGERTHAN (283) 59
LESSOREQUAL (284) 58
BIGGEROREQUAL (285) 60
EQUAL (286) 61
ASSIGN (287) 8 38
NOTEQUAL (288) 62
AND (289) 63
OR (290) 64
NOT (291) 67
ERROR (292)
UMINUS (293)


Não terminais com as regras onde eles aparecem

$accept (39)
    à esquerda: 0
start (40)
    à esquerda: 2, à direita: 0
$@1 (41)
    à esquerda: 1, à direita: 2
program (42)
    à esquerda: 3 4 5, à direita: 2 3 4
decvar (43)
    à esquerda: 6, à direita: 3 21
decvarassign (44)
    à esquerda: 7 8, à direita: 6
decfunc (45)
    à esquerda: 10, à direita: 4
$@2 (46)
    à esquerda: 9, à direita: 10
decfuncids (47)
    à esquerda: 14 18, à direita: 10
$@3 (48)
    à esquerda: 11, à direita: 14
$@4 (49)
    à esquerda: 12, à direita: 14
$@5 (50)
    à esquerda: 13, à direita: 14
$@6 (51)
    à esquerda: 15, à direita: 18
$@7 (52)
    à esquerda: 16, à direita: 18
$@8 (53)
    à esquerda: 17, à direita: 18
block (54)
    à esquerda: 20, à direita: 14 18 40 41 43
$@9 (55)
    à esquerda: 19, à direita: 20
blockstatements (56)
    à esquerda: 21 22 23, à direita: 20 21
paramlist (57)
    à esquerda: 24 26 27, à direita: 14 18 26
$@10 (58)
    à esquerda: 25, à direita: 26
statement (59)
    à esquerda: 29 31 32 33 34 35 36 37, à direita: 22 29 31 32 33
$@11 (60)
    à esquerda: 28, à direita: 29
$@12 (61)
    à esquerda: 30, à direita: 31
assigner (62)
    à esquerda: 38 39, à direita: 29
conditional (63)
    à esquerda: 40 41, à direita: 32
loop (64)
    à esquerda: 43, à direita: 33
$@13 (65)
    à esquerda: 42, à direita: 43
break (66)
    à esquerda: 44, à direita: 35
continue (67)
    à esquerda: 45, à direita: 36
return (68)
    à esquerda: 47, à direita: 34
$@14 (69)
    à esquerda: 46, à direita: 47
expr (70)
    à esquerda: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    65, à direita: 8 38 40 41 43 47 48 49 53 54 55 56 57 58 59 60
    61 62 63 64 72
unop (71)
    à esquerda: 66 67, à direita: 48
funccall (72)
    à esquerda: 68 71, à direita: 31 50
$@15 (73)
    à esquerda: 69, à direita: 71
$@16 (74)
    à esquerda: 70, à direita: 71
arglist (75)
    à esquerda: 72, à direita: 71 74
arglistparams (76)
    à esquerda: 73 74, à direita: 72


Estado 0

    0 $accept: . start $end
    1 $@1: . %empty
    2 start: . $@1 program

    $padrão  reduzir usando a regra 1 ($@1)

    start  ir ao estado 1
    $@1    ir ao estado 2


Estado 1

    0 $accept: start . $end

    $end  deslocar, e ir ao estado 3


Estado 2

    2 start: $@1 . program
    3 program: . decvar program
    4        | . decfunc program
    5        | . %empty  [$end]
    6 decvar: . LET_T ID decvarassign SEMICOLON
   10 decfunc: . DEF_T $@2 decfuncids

    LET_T  deslocar, e ir ao estado 4
    DEF_T  deslocar, e ir ao estado 5

    $padrão  reduzir usando a regra 5 (program)

    program  ir ao estado 6
    decvar   ir ao estado 7
    decfunc  ir ao estado 8


Estado 3

    0 $accept: start $end .

    $padrão  aceitar


Estado 4

    6 decvar: LET_T . ID decvarassign SEMICOLON

    ID  deslocar, e ir ao estado 9


Estado 5

    9 $@2: . %empty
   10 decfunc: DEF_T . $@2 decfuncids

    $padrão  reduzir usando a regra 9 ($@2)

    $@2  ir ao estado 10


Estado 6

    2 start: $@1 program .

    $padrão  reduzir usando a regra 2 (start)


Estado 7

    3 program: . decvar program
    3        | decvar . program
    4        | . decfunc program
    5        | . %empty  [$end]
    6 decvar: . LET_T ID decvarassign SEMICOLON
   10 decfunc: . DEF_T $@2 decfuncids

    LET_T  deslocar, e ir ao estado 4
    DEF_T  deslocar, e ir ao estado 5

    $padrão  reduzir usando a regra 5 (program)

    program  ir ao estado 11
    decvar   ir ao estado 7
    decfunc  ir ao estado 8


Estado 8

    3 program: . decvar program
    4        | . decfunc program
    4        | decfunc . program
    5        | . %empty  [$end]
    6 decvar: . LET_T ID decvarassign SEMICOLON
   10 decfunc: . DEF_T $@2 decfuncids

    LET_T  deslocar, e ir ao estado 4
    DEF_T  deslocar, e ir ao estado 5

    $padrão  reduzir usando a regra 5 (program)

    program  ir ao estado 12
    decvar   ir ao estado 7
    decfunc  ir ao estado 8


Estado 9

    6 decvar: LET_T ID . decvarassign SEMICOLON
    7 decvarassign: . %empty  [SEMICOLON]
    8             | . ASSIGN expr

    ASSIGN  deslocar, e ir ao estado 13

    $padrão  reduzir usando a regra 7 (decvarassign)

    decvarassign  ir ao estado 14


Estado 10

   10 decfunc: DEF_T $@2 . decfuncids
   14 decfuncids: . MAIN_T $@3 LPARENT $@4 paramlist $@5 RPARENT block
   18           | . ID $@6 LPARENT $@7 paramlist $@8 RPARENT block

    ID      deslocar, e ir ao estado 15
    MAIN_T  deslocar, e ir ao estado 16

    decfuncids  ir ao estado 17


Estado 11

    3 program: decvar program .

    $padrão  reduzir usando a regra 3 (program)


Estado 12

    4 program: decfunc program .

    $padrão  reduzir usando a regra 4 (program)


Estado 13

    8 decvarassign: ASSIGN . expr
   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 23
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 14

    6 decvar: LET_T ID decvarassign . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 26


Estado 15

   15 $@6: . %empty
   18 decfuncids: ID . $@6 LPARENT $@7 paramlist $@8 RPARENT block

    $padrão  reduzir usando a regra 15 ($@6)

    $@6  ir ao estado 27


Estado 16

   11 $@3: . %empty
   14 decfuncids: MAIN_T . $@3 LPARENT $@4 paramlist $@5 RPARENT block

    $padrão  reduzir usando a regra 11 ($@3)

    $@3  ir ao estado 28


Estado 17

   10 decfunc: DEF_T $@2 decfuncids .

    $padrão  reduzir usando a regra 10 (decfunc)


Estado 18

   52 expr: ID .  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   68 funccall: ID . LPARENT RPARENT
   71         | ID . LPARENT $@15 arglist $@16 RPARENT

    LPARENT  deslocar, e ir ao estado 29

    $padrão  reduzir usando a regra 52 (expr)


Estado 19

   51 expr: DEC .

    $padrão  reduzir usando a regra 51 (expr)


Estado 20

   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   49     | LPARENT . expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 30
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 21

   66 unop: MINUS .

    $padrão  reduzir usando a regra 66 (unop)


Estado 22

   67 unop: NOT .

    $padrão  reduzir usando a regra 67 (unop)


Estado 23

    8 decvarassign: ASSIGN expr .  [SEMICOLON]
   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    PLUS           deslocar, e ir ao estado 31
    MINUS          deslocar, e ir ao estado 32
    MULTIPLY       deslocar, e ir ao estado 33
    DIVIDER        deslocar, e ir ao estado 34
    LESSTHAN       deslocar, e ir ao estado 35
    BIGGERTHAN     deslocar, e ir ao estado 36
    LESSOREQUAL    deslocar, e ir ao estado 37
    BIGGEROREQUAL  deslocar, e ir ao estado 38
    EQUAL          deslocar, e ir ao estado 39
    NOTEQUAL       deslocar, e ir ao estado 40
    AND            deslocar, e ir ao estado 41
    OR             deslocar, e ir ao estado 42

    $padrão  reduzir usando a regra 8 (decvarassign)


Estado 24

   48 expr: . unop expr
   48     | unop . expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 43
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 25

   50 expr: funccall .

    $padrão  reduzir usando a regra 50 (expr)


Estado 26

    6 decvar: LET_T ID decvarassign SEMICOLON .

    $padrão  reduzir usando a regra 6 (decvar)


Estado 27

   18 decfuncids: ID $@6 . LPARENT $@7 paramlist $@8 RPARENT block

    LPARENT  deslocar, e ir ao estado 44


Estado 28

   14 decfuncids: MAIN_T $@3 . LPARENT $@4 paramlist $@5 RPARENT block

    LPARENT  deslocar, e ir ao estado 45


Estado 29

   68 funccall: ID LPARENT . RPARENT
   69 $@15: . %empty  [ID, DEC, LPARENT, RPARENT, COMMA, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR, NOT]
   71 funccall: ID LPARENT . $@15 arglist $@16 RPARENT

    RPARENT  deslocar, e ir ao estado 46

    RPARENT   [reduzir usando a regra 69 ($@15)]
    $padrão  reduzir usando a regra 69 ($@15)

    $@15  ir ao estado 47


Estado 30

   49 expr: LPARENT expr . RPARENT
   53     | expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    RPARENT        deslocar, e ir ao estado 48
    PLUS           deslocar, e ir ao estado 31
    MINUS          deslocar, e ir ao estado 32
    MULTIPLY       deslocar, e ir ao estado 33
    DIVIDER        deslocar, e ir ao estado 34
    LESSTHAN       deslocar, e ir ao estado 35
    BIGGERTHAN     deslocar, e ir ao estado 36
    LESSOREQUAL    deslocar, e ir ao estado 37
    BIGGEROREQUAL  deslocar, e ir ao estado 38
    EQUAL          deslocar, e ir ao estado 39
    NOTEQUAL       deslocar, e ir ao estado 40
    AND            deslocar, e ir ao estado 41
    OR             deslocar, e ir ao estado 42


Estado 31

   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   53     | expr PLUS . expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 49
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 32

   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   54     | expr MINUS . expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 50
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 33

   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   55     | expr MULTIPLY . expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 51
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 34

   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   56     | expr DIVIDER . expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 52
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 35

   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   57     | expr LESSTHAN . expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 53
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 36

   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   59     | expr BIGGERTHAN . expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 54
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 37

   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   58     | expr LESSOREQUAL . expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 55
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 38

   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   60     | expr BIGGEROREQUAL . expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 56
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 39

   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   61     | expr EQUAL . expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 57
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 40

   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   62     | expr NOTEQUAL . expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 58
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 41

   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   63     | expr AND . expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 59
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 42

   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   64     | expr OR . expr
   65     | . %empty  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 60
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 43

   48 expr: unop expr .  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   53     | expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    AND  deslocar, e ir ao estado 41
    OR   deslocar, e ir ao estado 42

    AND       [reduzir usando a regra 48 (expr)]
    OR        [reduzir usando a regra 48 (expr)]
    $padrão  reduzir usando a regra 48 (expr)

    Conflito entre regra 48 e token PLUS resolvido como reduce. (PLUS < UMINUS).
    Conflito entre regra 48 e token MINUS resolvido como reduce. (MINUS < UMINUS).
    Conflito entre regra 48 e token MULTIPLY resolvido como reduce. (MULTIPLY < UMINUS).
    Conflito entre regra 48 e token DIVIDER resolvido como reduce. (DIVIDER < UMINUS).
    Conflito entre regra 48 e token LESSTHAN resolvido como reduce. (LESSTHAN < UMINUS).
    Conflito entre regra 48 e token BIGGERTHAN resolvido como reduce. (BIGGERTHAN < UMINUS).
    Conflito entre regra 48 e token LESSOREQUAL resolvido como reduce. (LESSOREQUAL < UMINUS).
    Conflito entre regra 48 e token BIGGEROREQUAL resolvido como reduce. (BIGGEROREQUAL < UMINUS).
    Conflito entre regra 48 e token EQUAL resolvido como reduce. (EQUAL < UMINUS).
    Conflito entre regra 48 e token NOTEQUAL resolvido como reduce. (NOTEQUAL < UMINUS).


Estado 44

   16 $@7: . %empty
   18 decfuncids: ID $@6 LPARENT . $@7 paramlist $@8 RPARENT block

    $padrão  reduzir usando a regra 16 ($@7)

    $@7  ir ao estado 61


Estado 45

   12 $@4: . %empty
   14 decfuncids: MAIN_T $@3 LPARENT . $@4 paramlist $@5 RPARENT block

    $padrão  reduzir usando a regra 12 ($@4)

    $@4  ir ao estado 62


Estado 46

   68 funccall: ID LPARENT RPARENT .

    $padrão  reduzir usando a regra 68 (funccall)


Estado 47

   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, COMMA, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT
   71         | ID LPARENT $@15 . arglist $@16 RPARENT
   72 arglist: . expr arglistparams

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 63
    unop      ir ao estado 24
    funccall  ir ao estado 25
    arglist   ir ao estado 64


Estado 48

   49 expr: LPARENT expr RPARENT .

    $padrão  reduzir usando a regra 49 (expr)


Estado 49

   53 expr: expr . PLUS expr
   53     | expr PLUS expr .  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, AND, OR]
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    MULTIPLY       deslocar, e ir ao estado 33
    DIVIDER        deslocar, e ir ao estado 34
    LESSTHAN       deslocar, e ir ao estado 35
    BIGGERTHAN     deslocar, e ir ao estado 36
    LESSOREQUAL    deslocar, e ir ao estado 37
    BIGGEROREQUAL  deslocar, e ir ao estado 38
    EQUAL          deslocar, e ir ao estado 39
    NOTEQUAL       deslocar, e ir ao estado 40
    AND            deslocar, e ir ao estado 41
    OR             deslocar, e ir ao estado 42

    AND       [reduzir usando a regra 53 (expr)]
    OR        [reduzir usando a regra 53 (expr)]
    $padrão  reduzir usando a regra 53 (expr)

    Conflito entre regra 53 e token PLUS resolvido como reduce. (%left PLUS).
    Conflito entre regra 53 e token MINUS resolvido como reduce. (%left MINUS).
    Conflito entre regra 53 e token MULTIPLY resolvido como shift. (PLUS < MULTIPLY).
    Conflito entre regra 53 e token DIVIDER resolvido como shift. (PLUS < DIVIDER).
    Conflito entre regra 53 e token LESSTHAN resolvido como shift. (PLUS < LESSTHAN).
    Conflito entre regra 53 e token BIGGERTHAN resolvido como shift. (PLUS < BIGGERTHAN).
    Conflito entre regra 53 e token LESSOREQUAL resolvido como shift. (PLUS < LESSOREQUAL).
    Conflito entre regra 53 e token BIGGEROREQUAL resolvido como shift. (PLUS < BIGGEROREQUAL).
    Conflito entre regra 53 e token EQUAL resolvido como shift. (PLUS < EQUAL).
    Conflito entre regra 53 e token NOTEQUAL resolvido como shift. (PLUS < NOTEQUAL).


Estado 50

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   54     | expr MINUS expr .  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, AND, OR]
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    MULTIPLY       deslocar, e ir ao estado 33
    DIVIDER        deslocar, e ir ao estado 34
    LESSTHAN       deslocar, e ir ao estado 35
    BIGGERTHAN     deslocar, e ir ao estado 36
    LESSOREQUAL    deslocar, e ir ao estado 37
    BIGGEROREQUAL  deslocar, e ir ao estado 38
    EQUAL          deslocar, e ir ao estado 39
    NOTEQUAL       deslocar, e ir ao estado 40
    AND            deslocar, e ir ao estado 41
    OR             deslocar, e ir ao estado 42

    AND       [reduzir usando a regra 54 (expr)]
    OR        [reduzir usando a regra 54 (expr)]
    $padrão  reduzir usando a regra 54 (expr)

    Conflito entre regra 54 e token PLUS resolvido como reduce. (%left PLUS).
    Conflito entre regra 54 e token MINUS resolvido como reduce. (%left MINUS).
    Conflito entre regra 54 e token MULTIPLY resolvido como shift. (MINUS < MULTIPLY).
    Conflito entre regra 54 e token DIVIDER resolvido como shift. (MINUS < DIVIDER).
    Conflito entre regra 54 e token LESSTHAN resolvido como shift. (MINUS < LESSTHAN).
    Conflito entre regra 54 e token BIGGERTHAN resolvido como shift. (MINUS < BIGGERTHAN).
    Conflito entre regra 54 e token LESSOREQUAL resolvido como shift. (MINUS < LESSOREQUAL).
    Conflito entre regra 54 e token BIGGEROREQUAL resolvido como shift. (MINUS < BIGGEROREQUAL).
    Conflito entre regra 54 e token EQUAL resolvido como shift. (MINUS < EQUAL).
    Conflito entre regra 54 e token NOTEQUAL resolvido como shift. (MINUS < NOTEQUAL).


Estado 51

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   55     | expr MULTIPLY expr .  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, AND, OR]
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    LESSTHAN       deslocar, e ir ao estado 35
    BIGGERTHAN     deslocar, e ir ao estado 36
    LESSOREQUAL    deslocar, e ir ao estado 37
    BIGGEROREQUAL  deslocar, e ir ao estado 38
    EQUAL          deslocar, e ir ao estado 39
    NOTEQUAL       deslocar, e ir ao estado 40
    AND            deslocar, e ir ao estado 41
    OR             deslocar, e ir ao estado 42

    AND       [reduzir usando a regra 55 (expr)]
    OR        [reduzir usando a regra 55 (expr)]
    $padrão  reduzir usando a regra 55 (expr)

    Conflito entre regra 55 e token PLUS resolvido como reduce. (PLUS < MULTIPLY).
    Conflito entre regra 55 e token MINUS resolvido como reduce. (MINUS < MULTIPLY).
    Conflito entre regra 55 e token MULTIPLY resolvido como reduce. (%left MULTIPLY).
    Conflito entre regra 55 e token DIVIDER resolvido como reduce. (%left DIVIDER).
    Conflito entre regra 55 e token LESSTHAN resolvido como shift. (MULTIPLY < LESSTHAN).
    Conflito entre regra 55 e token BIGGERTHAN resolvido como shift. (MULTIPLY < BIGGERTHAN).
    Conflito entre regra 55 e token LESSOREQUAL resolvido como shift. (MULTIPLY < LESSOREQUAL).
    Conflito entre regra 55 e token BIGGEROREQUAL resolvido como shift. (MULTIPLY < BIGGEROREQUAL).
    Conflito entre regra 55 e token EQUAL resolvido como shift. (MULTIPLY < EQUAL).
    Conflito entre regra 55 e token NOTEQUAL resolvido como shift. (MULTIPLY < NOTEQUAL).


Estado 52

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   56     | expr DIVIDER expr .  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, AND, OR]
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    LESSTHAN       deslocar, e ir ao estado 35
    BIGGERTHAN     deslocar, e ir ao estado 36
    LESSOREQUAL    deslocar, e ir ao estado 37
    BIGGEROREQUAL  deslocar, e ir ao estado 38
    EQUAL          deslocar, e ir ao estado 39
    NOTEQUAL       deslocar, e ir ao estado 40
    AND            deslocar, e ir ao estado 41
    OR             deslocar, e ir ao estado 42

    AND       [reduzir usando a regra 56 (expr)]
    OR        [reduzir usando a regra 56 (expr)]
    $padrão  reduzir usando a regra 56 (expr)

    Conflito entre regra 56 e token PLUS resolvido como reduce. (PLUS < DIVIDER).
    Conflito entre regra 56 e token MINUS resolvido como reduce. (MINUS < DIVIDER).
    Conflito entre regra 56 e token MULTIPLY resolvido como reduce. (%left MULTIPLY).
    Conflito entre regra 56 e token DIVIDER resolvido como reduce. (%left DIVIDER).
    Conflito entre regra 56 e token LESSTHAN resolvido como shift. (DIVIDER < LESSTHAN).
    Conflito entre regra 56 e token BIGGERTHAN resolvido como shift. (DIVIDER < BIGGERTHAN).
    Conflito entre regra 56 e token LESSOREQUAL resolvido como shift. (DIVIDER < LESSOREQUAL).
    Conflito entre regra 56 e token BIGGEROREQUAL resolvido como shift. (DIVIDER < BIGGEROREQUAL).
    Conflito entre regra 56 e token EQUAL resolvido como shift. (DIVIDER < EQUAL).
    Conflito entre regra 56 e token NOTEQUAL resolvido como shift. (DIVIDER < NOTEQUAL).


Estado 53

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   57     | expr LESSTHAN expr .  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    AND  deslocar, e ir ao estado 41
    OR   deslocar, e ir ao estado 42

    AND       [reduzir usando a regra 57 (expr)]
    OR        [reduzir usando a regra 57 (expr)]
    $padrão  reduzir usando a regra 57 (expr)

    Conflito entre regra 57 e token PLUS resolvido como reduce. (PLUS < LESSTHAN).
    Conflito entre regra 57 e token MINUS resolvido como reduce. (MINUS < LESSTHAN).
    Conflito entre regra 57 e token MULTIPLY resolvido como reduce. (MULTIPLY < LESSTHAN).
    Conflito entre regra 57 e token DIVIDER resolvido como reduce. (DIVIDER < LESSTHAN).
    Conflito entre regra 57 e token LESSTHAN resolvido como reduce. (%left LESSTHAN).
    Conflito entre regra 57 e token BIGGERTHAN resolvido como reduce. (%left BIGGERTHAN).
    Conflito entre regra 57 e token LESSOREQUAL resolvido como reduce. (%left LESSOREQUAL).
    Conflito entre regra 57 e token BIGGEROREQUAL resolvido como reduce. (%left BIGGEROREQUAL).
    Conflito entre regra 57 e token EQUAL resolvido como reduce. (%left EQUAL).
    Conflito entre regra 57 e token NOTEQUAL resolvido como reduce. (%left NOTEQUAL).


Estado 54

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   59     | expr BIGGERTHAN expr .  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    AND  deslocar, e ir ao estado 41
    OR   deslocar, e ir ao estado 42

    AND       [reduzir usando a regra 59 (expr)]
    OR        [reduzir usando a regra 59 (expr)]
    $padrão  reduzir usando a regra 59 (expr)

    Conflito entre regra 59 e token PLUS resolvido como reduce. (PLUS < BIGGERTHAN).
    Conflito entre regra 59 e token MINUS resolvido como reduce. (MINUS < BIGGERTHAN).
    Conflito entre regra 59 e token MULTIPLY resolvido como reduce. (MULTIPLY < BIGGERTHAN).
    Conflito entre regra 59 e token DIVIDER resolvido como reduce. (DIVIDER < BIGGERTHAN).
    Conflito entre regra 59 e token LESSTHAN resolvido como reduce. (%left LESSTHAN).
    Conflito entre regra 59 e token BIGGERTHAN resolvido como reduce. (%left BIGGERTHAN).
    Conflito entre regra 59 e token LESSOREQUAL resolvido como reduce. (%left LESSOREQUAL).
    Conflito entre regra 59 e token BIGGEROREQUAL resolvido como reduce. (%left BIGGEROREQUAL).
    Conflito entre regra 59 e token EQUAL resolvido como reduce. (%left EQUAL).
    Conflito entre regra 59 e token NOTEQUAL resolvido como reduce. (%left NOTEQUAL).


Estado 55

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   58     | expr LESSOREQUAL expr .  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    AND  deslocar, e ir ao estado 41
    OR   deslocar, e ir ao estado 42

    AND       [reduzir usando a regra 58 (expr)]
    OR        [reduzir usando a regra 58 (expr)]
    $padrão  reduzir usando a regra 58 (expr)

    Conflito entre regra 58 e token PLUS resolvido como reduce. (PLUS < LESSOREQUAL).
    Conflito entre regra 58 e token MINUS resolvido como reduce. (MINUS < LESSOREQUAL).
    Conflito entre regra 58 e token MULTIPLY resolvido como reduce. (MULTIPLY < LESSOREQUAL).
    Conflito entre regra 58 e token DIVIDER resolvido como reduce. (DIVIDER < LESSOREQUAL).
    Conflito entre regra 58 e token LESSTHAN resolvido como reduce. (%left LESSTHAN).
    Conflito entre regra 58 e token BIGGERTHAN resolvido como reduce. (%left BIGGERTHAN).
    Conflito entre regra 58 e token LESSOREQUAL resolvido como reduce. (%left LESSOREQUAL).
    Conflito entre regra 58 e token BIGGEROREQUAL resolvido como reduce. (%left BIGGEROREQUAL).
    Conflito entre regra 58 e token EQUAL resolvido como reduce. (%left EQUAL).
    Conflito entre regra 58 e token NOTEQUAL resolvido como reduce. (%left NOTEQUAL).


Estado 56

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   60     | expr BIGGEROREQUAL expr .  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    AND  deslocar, e ir ao estado 41
    OR   deslocar, e ir ao estado 42

    AND       [reduzir usando a regra 60 (expr)]
    OR        [reduzir usando a regra 60 (expr)]
    $padrão  reduzir usando a regra 60 (expr)

    Conflito entre regra 60 e token PLUS resolvido como reduce. (PLUS < BIGGEROREQUAL).
    Conflito entre regra 60 e token MINUS resolvido como reduce. (MINUS < BIGGEROREQUAL).
    Conflito entre regra 60 e token MULTIPLY resolvido como reduce. (MULTIPLY < BIGGEROREQUAL).
    Conflito entre regra 60 e token DIVIDER resolvido como reduce. (DIVIDER < BIGGEROREQUAL).
    Conflito entre regra 60 e token LESSTHAN resolvido como reduce. (%left LESSTHAN).
    Conflito entre regra 60 e token BIGGERTHAN resolvido como reduce. (%left BIGGERTHAN).
    Conflito entre regra 60 e token LESSOREQUAL resolvido como reduce. (%left LESSOREQUAL).
    Conflito entre regra 60 e token BIGGEROREQUAL resolvido como reduce. (%left BIGGEROREQUAL).
    Conflito entre regra 60 e token EQUAL resolvido como reduce. (%left EQUAL).
    Conflito entre regra 60 e token NOTEQUAL resolvido como reduce. (%left NOTEQUAL).


Estado 57

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   61     | expr EQUAL expr .  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    AND  deslocar, e ir ao estado 41
    OR   deslocar, e ir ao estado 42

    AND       [reduzir usando a regra 61 (expr)]
    OR        [reduzir usando a regra 61 (expr)]
    $padrão  reduzir usando a regra 61 (expr)

    Conflito entre regra 61 e token PLUS resolvido como reduce. (PLUS < EQUAL).
    Conflito entre regra 61 e token MINUS resolvido como reduce. (MINUS < EQUAL).
    Conflito entre regra 61 e token MULTIPLY resolvido como reduce. (MULTIPLY < EQUAL).
    Conflito entre regra 61 e token DIVIDER resolvido como reduce. (DIVIDER < EQUAL).
    Conflito entre regra 61 e token LESSTHAN resolvido como reduce. (%left LESSTHAN).
    Conflito entre regra 61 e token BIGGERTHAN resolvido como reduce. (%left BIGGERTHAN).
    Conflito entre regra 61 e token LESSOREQUAL resolvido como reduce. (%left LESSOREQUAL).
    Conflito entre regra 61 e token BIGGEROREQUAL resolvido como reduce. (%left BIGGEROREQUAL).
    Conflito entre regra 61 e token EQUAL resolvido como reduce. (%left EQUAL).
    Conflito entre regra 61 e token NOTEQUAL resolvido como reduce. (%left NOTEQUAL).


Estado 58

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   62     | expr NOTEQUAL expr .  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   63     | expr . AND expr
   64     | expr . OR expr

    AND  deslocar, e ir ao estado 41
    OR   deslocar, e ir ao estado 42

    AND       [reduzir usando a regra 62 (expr)]
    OR        [reduzir usando a regra 62 (expr)]
    $padrão  reduzir usando a regra 62 (expr)

    Conflito entre regra 62 e token PLUS resolvido como reduce. (PLUS < NOTEQUAL).
    Conflito entre regra 62 e token MINUS resolvido como reduce. (MINUS < NOTEQUAL).
    Conflito entre regra 62 e token MULTIPLY resolvido como reduce. (MULTIPLY < NOTEQUAL).
    Conflito entre regra 62 e token DIVIDER resolvido como reduce. (DIVIDER < NOTEQUAL).
    Conflito entre regra 62 e token LESSTHAN resolvido como reduce. (%left LESSTHAN).
    Conflito entre regra 62 e token BIGGERTHAN resolvido como reduce. (%left BIGGERTHAN).
    Conflito entre regra 62 e token LESSOREQUAL resolvido como reduce. (%left LESSOREQUAL).
    Conflito entre regra 62 e token BIGGEROREQUAL resolvido como reduce. (%left BIGGEROREQUAL).
    Conflito entre regra 62 e token EQUAL resolvido como reduce. (%left EQUAL).
    Conflito entre regra 62 e token NOTEQUAL resolvido como reduce. (%left NOTEQUAL).


Estado 59

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   63     | expr AND expr .  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   64     | expr . OR expr

    PLUS           deslocar, e ir ao estado 31
    MINUS          deslocar, e ir ao estado 32
    MULTIPLY       deslocar, e ir ao estado 33
    DIVIDER        deslocar, e ir ao estado 34
    LESSTHAN       deslocar, e ir ao estado 35
    BIGGERTHAN     deslocar, e ir ao estado 36
    LESSOREQUAL    deslocar, e ir ao estado 37
    BIGGEROREQUAL  deslocar, e ir ao estado 38
    EQUAL          deslocar, e ir ao estado 39
    NOTEQUAL       deslocar, e ir ao estado 40
    AND            deslocar, e ir ao estado 41
    OR             deslocar, e ir ao estado 42

    PLUS           [reduzir usando a regra 63 (expr)]
    MINUS          [reduzir usando a regra 63 (expr)]
    MULTIPLY       [reduzir usando a regra 63 (expr)]
    DIVIDER        [reduzir usando a regra 63 (expr)]
    LESSTHAN       [reduzir usando a regra 63 (expr)]
    BIGGERTHAN     [reduzir usando a regra 63 (expr)]
    LESSOREQUAL    [reduzir usando a regra 63 (expr)]
    BIGGEROREQUAL  [reduzir usando a regra 63 (expr)]
    EQUAL          [reduzir usando a regra 63 (expr)]
    NOTEQUAL       [reduzir usando a regra 63 (expr)]
    AND            [reduzir usando a regra 63 (expr)]
    OR             [reduzir usando a regra 63 (expr)]
    $padrão       reduzir usando a regra 63 (expr)


Estado 60

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr
   64     | expr OR expr .  [RPARENT, COMMA, SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]

    PLUS           deslocar, e ir ao estado 31
    MINUS          deslocar, e ir ao estado 32
    MULTIPLY       deslocar, e ir ao estado 33
    DIVIDER        deslocar, e ir ao estado 34
    LESSTHAN       deslocar, e ir ao estado 35
    BIGGERTHAN     deslocar, e ir ao estado 36
    LESSOREQUAL    deslocar, e ir ao estado 37
    BIGGEROREQUAL  deslocar, e ir ao estado 38
    EQUAL          deslocar, e ir ao estado 39
    NOTEQUAL       deslocar, e ir ao estado 40
    AND            deslocar, e ir ao estado 41
    OR             deslocar, e ir ao estado 42

    PLUS           [reduzir usando a regra 64 (expr)]
    MINUS          [reduzir usando a regra 64 (expr)]
    MULTIPLY       [reduzir usando a regra 64 (expr)]
    DIVIDER        [reduzir usando a regra 64 (expr)]
    LESSTHAN       [reduzir usando a regra 64 (expr)]
    BIGGERTHAN     [reduzir usando a regra 64 (expr)]
    LESSOREQUAL    [reduzir usando a regra 64 (expr)]
    BIGGEROREQUAL  [reduzir usando a regra 64 (expr)]
    EQUAL          [reduzir usando a regra 64 (expr)]
    NOTEQUAL       [reduzir usando a regra 64 (expr)]
    AND            [reduzir usando a regra 64 (expr)]
    OR             [reduzir usando a regra 64 (expr)]
    $padrão       reduzir usando a regra 64 (expr)


Estado 61

   18 decfuncids: ID $@6 LPARENT $@7 . paramlist $@8 RPARENT block
   24 paramlist: . ID
   26          | . ID COMMA $@10 paramlist
   27          | . %empty  [RPARENT]

    ID  deslocar, e ir ao estado 65

    $padrão  reduzir usando a regra 27 (paramlist)

    paramlist  ir ao estado 66


Estado 62

   14 decfuncids: MAIN_T $@3 LPARENT $@4 . paramlist $@5 RPARENT block
   24 paramlist: . ID
   26          | . ID COMMA $@10 paramlist
   27          | . %empty  [RPARENT]

    ID  deslocar, e ir ao estado 65

    $padrão  reduzir usando a regra 27 (paramlist)

    paramlist  ir ao estado 67


Estado 63

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr
   72 arglist: expr . arglistparams
   73 arglistparams: . %empty  [RPARENT]
   74              | . COMMA arglist

    COMMA          deslocar, e ir ao estado 68
    PLUS           deslocar, e ir ao estado 31
    MINUS          deslocar, e ir ao estado 32
    MULTIPLY       deslocar, e ir ao estado 33
    DIVIDER        deslocar, e ir ao estado 34
    LESSTHAN       deslocar, e ir ao estado 35
    BIGGERTHAN     deslocar, e ir ao estado 36
    LESSOREQUAL    deslocar, e ir ao estado 37
    BIGGEROREQUAL  deslocar, e ir ao estado 38
    EQUAL          deslocar, e ir ao estado 39
    NOTEQUAL       deslocar, e ir ao estado 40
    AND            deslocar, e ir ao estado 41
    OR             deslocar, e ir ao estado 42

    $padrão  reduzir usando a regra 73 (arglistparams)

    arglistparams  ir ao estado 69


Estado 64

   70 $@16: . %empty
   71 funccall: ID LPARENT $@15 arglist . $@16 RPARENT

    $padrão  reduzir usando a regra 70 ($@16)

    $@16  ir ao estado 70


Estado 65

   24 paramlist: ID .  [RPARENT]
   26          | ID . COMMA $@10 paramlist

    COMMA  deslocar, e ir ao estado 71

    $padrão  reduzir usando a regra 24 (paramlist)


Estado 66

   17 $@8: . %empty
   18 decfuncids: ID $@6 LPARENT $@7 paramlist . $@8 RPARENT block

    $padrão  reduzir usando a regra 17 ($@8)

    $@8  ir ao estado 72


Estado 67

   13 $@5: . %empty
   14 decfuncids: MAIN_T $@3 LPARENT $@4 paramlist . $@5 RPARENT block

    $padrão  reduzir usando a regra 13 ($@5)

    $@5  ir ao estado 73


Estado 68

   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, COMMA, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT
   72 arglist: . expr arglistparams
   74 arglistparams: COMMA . arglist

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 63
    unop      ir ao estado 24
    funccall  ir ao estado 25
    arglist   ir ao estado 74


Estado 69

   72 arglist: expr arglistparams .

    $padrão  reduzir usando a regra 72 (arglist)


Estado 70

   71 funccall: ID LPARENT $@15 arglist $@16 . RPARENT

    RPARENT  deslocar, e ir ao estado 75


Estado 71

   25 $@10: . %empty
   26 paramlist: ID COMMA . $@10 paramlist

    $padrão  reduzir usando a regra 25 ($@10)

    $@10  ir ao estado 76


Estado 72

   18 decfuncids: ID $@6 LPARENT $@7 paramlist $@8 . RPARENT block

    RPARENT  deslocar, e ir ao estado 77


Estado 73

   14 decfuncids: MAIN_T $@3 LPARENT $@4 paramlist $@5 . RPARENT block

    RPARENT  deslocar, e ir ao estado 78


Estado 74

   74 arglistparams: COMMA arglist .

    $padrão  reduzir usando a regra 74 (arglistparams)


Estado 75

   71 funccall: ID LPARENT $@15 arglist $@16 RPARENT .

    $padrão  reduzir usando a regra 71 (funccall)


Estado 76

   24 paramlist: . ID
   26          | . ID COMMA $@10 paramlist
   26          | ID COMMA $@10 . paramlist
   27          | . %empty  [RPARENT]

    ID  deslocar, e ir ao estado 65

    $padrão  reduzir usando a regra 27 (paramlist)

    paramlist  ir ao estado 79


Estado 77

   18 decfuncids: ID $@6 LPARENT $@7 paramlist $@8 RPARENT . block
   20 block: . LBRACE $@9 blockstatements RBRACE

    LBRACE  deslocar, e ir ao estado 80

    block  ir ao estado 81


Estado 78

   14 decfuncids: MAIN_T $@3 LPARENT $@4 paramlist $@5 RPARENT . block
   20 block: . LBRACE $@9 blockstatements RBRACE

    LBRACE  deslocar, e ir ao estado 80

    block  ir ao estado 82


Estado 79

   26 paramlist: ID COMMA $@10 paramlist .

    $padrão  reduzir usando a regra 26 (paramlist)


Estado 80

   19 $@9: . %empty
   20 block: LBRACE . $@9 blockstatements RBRACE

    $padrão  reduzir usando a regra 19 ($@9)

    $@9  ir ao estado 83


Estado 81

   18 decfuncids: ID $@6 LPARENT $@7 paramlist $@8 RPARENT block .

    $padrão  reduzir usando a regra 18 (decfuncids)


Estado 82

   14 decfuncids: MAIN_T $@3 LPARENT $@4 paramlist $@5 RPARENT block .

    $padrão  reduzir usando a regra 14 (decfuncids)


Estado 83

    6 decvar: . LET_T ID decvarassign SEMICOLON
   20 block: LBRACE $@9 . blockstatements RBRACE
   21 blockstatements: . decvar blockstatements
   22                | . statement
   23                | . %empty  [RBRACE]
   29 statement: . assigner $@11 SEMICOLON statement
   31          | . funccall $@12 SEMICOLON statement
   32          | . conditional statement
   33          | . loop statement
   34          | . return
   35          | . break
   36          | . continue
   37          | . %empty  [RBRACE]
   38 assigner: . ID ASSIGN expr
   39         | . %empty  [SEMICOLON]
   40 conditional: . IF_T LPARENT expr RPARENT block ELSE_T block
   41            | . IF_T LPARENT expr RPARENT block
   43 loop: . WHILE_T $@13 LPARENT expr RPARENT block
   44 break: . BREAK_T SEMICOLON
   45 continue: . CONTINUE_T SEMICOLON
   46 $@14: . %empty  [RETURN_T]
   47 return: . $@14 RETURN_T expr SEMICOLON
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID          deslocar, e ir ao estado 84
    LET_T       deslocar, e ir ao estado 4
    IF_T        deslocar, e ir ao estado 85
    WHILE_T     deslocar, e ir ao estado 86
    BREAK_T     deslocar, e ir ao estado 87
    CONTINUE_T  deslocar, e ir ao estado 88

    RETURN_T   reduzir usando a regra 46 ($@14)
    RBRACE     reduzir usando a regra 23 (blockstatements)
    RBRACE     [reduzir usando a regra 37 (statement)]
    SEMICOLON  reduzir usando a regra 39 (assigner)
    $padrão   reduzir usando a regra 23 (blockstatements)

    decvar           ir ao estado 89
    blockstatements  ir ao estado 90
    statement        ir ao estado 91
    assigner         ir ao estado 92
    conditional      ir ao estado 93
    loop             ir ao estado 94
    break            ir ao estado 95
    continue         ir ao estado 96
    return           ir ao estado 97
    $@14             ir ao estado 98
    funccall         ir ao estado 99


Estado 84

   38 assigner: ID . ASSIGN expr
   68 funccall: ID . LPARENT RPARENT
   71         | ID . LPARENT $@15 arglist $@16 RPARENT

    LPARENT  deslocar, e ir ao estado 29
    ASSIGN   deslocar, e ir ao estado 100


Estado 85

   40 conditional: IF_T . LPARENT expr RPARENT block ELSE_T block
   41            | IF_T . LPARENT expr RPARENT block

    LPARENT  deslocar, e ir ao estado 101


Estado 86

   42 $@13: . %empty
   43 loop: WHILE_T . $@13 LPARENT expr RPARENT block

    $padrão  reduzir usando a regra 42 ($@13)

    $@13  ir ao estado 102


Estado 87

   44 break: BREAK_T . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 103


Estado 88

   45 continue: CONTINUE_T . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 104


Estado 89

    6 decvar: . LET_T ID decvarassign SEMICOLON
   21 blockstatements: . decvar blockstatements
   21                | decvar . blockstatements
   22                | . statement
   23                | . %empty  [RBRACE]
   29 statement: . assigner $@11 SEMICOLON statement
   31          | . funccall $@12 SEMICOLON statement
   32          | . conditional statement
   33          | . loop statement
   34          | . return
   35          | . break
   36          | . continue
   37          | . %empty  [RBRACE]
   38 assigner: . ID ASSIGN expr
   39         | . %empty  [SEMICOLON]
   40 conditional: . IF_T LPARENT expr RPARENT block ELSE_T block
   41            | . IF_T LPARENT expr RPARENT block
   43 loop: . WHILE_T $@13 LPARENT expr RPARENT block
   44 break: . BREAK_T SEMICOLON
   45 continue: . CONTINUE_T SEMICOLON
   46 $@14: . %empty  [RETURN_T]
   47 return: . $@14 RETURN_T expr SEMICOLON
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID          deslocar, e ir ao estado 84
    LET_T       deslocar, e ir ao estado 4
    IF_T        deslocar, e ir ao estado 85
    WHILE_T     deslocar, e ir ao estado 86
    BREAK_T     deslocar, e ir ao estado 87
    CONTINUE_T  deslocar, e ir ao estado 88

    RETURN_T   reduzir usando a regra 46 ($@14)
    RBRACE     reduzir usando a regra 23 (blockstatements)
    RBRACE     [reduzir usando a regra 37 (statement)]
    SEMICOLON  reduzir usando a regra 39 (assigner)
    $padrão   reduzir usando a regra 23 (blockstatements)

    decvar           ir ao estado 89
    blockstatements  ir ao estado 105
    statement        ir ao estado 91
    assigner         ir ao estado 92
    conditional      ir ao estado 93
    loop             ir ao estado 94
    break            ir ao estado 95
    continue         ir ao estado 96
    return           ir ao estado 97
    $@14             ir ao estado 98
    funccall         ir ao estado 99


Estado 90

   20 block: LBRACE $@9 blockstatements . RBRACE

    RBRACE  deslocar, e ir ao estado 106


Estado 91

   22 blockstatements: statement .

    $padrão  reduzir usando a regra 22 (blockstatements)


Estado 92

   28 $@11: . %empty
   29 statement: assigner . $@11 SEMICOLON statement

    $padrão  reduzir usando a regra 28 ($@11)

    $@11  ir ao estado 107


Estado 93

   29 statement: . assigner $@11 SEMICOLON statement
   31          | . funccall $@12 SEMICOLON statement
   32          | . conditional statement
   32          | conditional . statement
   33          | . loop statement
   34          | . return
   35          | . break
   36          | . continue
   37          | . %empty  [RBRACE]
   38 assigner: . ID ASSIGN expr
   39         | . %empty  [SEMICOLON]
   40 conditional: . IF_T LPARENT expr RPARENT block ELSE_T block
   41            | . IF_T LPARENT expr RPARENT block
   43 loop: . WHILE_T $@13 LPARENT expr RPARENT block
   44 break: . BREAK_T SEMICOLON
   45 continue: . CONTINUE_T SEMICOLON
   46 $@14: . %empty  [RETURN_T]
   47 return: . $@14 RETURN_T expr SEMICOLON
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID          deslocar, e ir ao estado 84
    IF_T        deslocar, e ir ao estado 85
    WHILE_T     deslocar, e ir ao estado 86
    BREAK_T     deslocar, e ir ao estado 87
    CONTINUE_T  deslocar, e ir ao estado 88

    RETURN_T   reduzir usando a regra 46 ($@14)
    SEMICOLON  reduzir usando a regra 39 (assigner)
    $padrão   reduzir usando a regra 37 (statement)

    statement    ir ao estado 108
    assigner     ir ao estado 92
    conditional  ir ao estado 93
    loop         ir ao estado 94
    break        ir ao estado 95
    continue     ir ao estado 96
    return       ir ao estado 97
    $@14         ir ao estado 98
    funccall     ir ao estado 99


Estado 94

   29 statement: . assigner $@11 SEMICOLON statement
   31          | . funccall $@12 SEMICOLON statement
   32          | . conditional statement
   33          | . loop statement
   33          | loop . statement
   34          | . return
   35          | . break
   36          | . continue
   37          | . %empty  [RBRACE]
   38 assigner: . ID ASSIGN expr
   39         | . %empty  [SEMICOLON]
   40 conditional: . IF_T LPARENT expr RPARENT block ELSE_T block
   41            | . IF_T LPARENT expr RPARENT block
   43 loop: . WHILE_T $@13 LPARENT expr RPARENT block
   44 break: . BREAK_T SEMICOLON
   45 continue: . CONTINUE_T SEMICOLON
   46 $@14: . %empty  [RETURN_T]
   47 return: . $@14 RETURN_T expr SEMICOLON
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID          deslocar, e ir ao estado 84
    IF_T        deslocar, e ir ao estado 85
    WHILE_T     deslocar, e ir ao estado 86
    BREAK_T     deslocar, e ir ao estado 87
    CONTINUE_T  deslocar, e ir ao estado 88

    RETURN_T   reduzir usando a regra 46 ($@14)
    SEMICOLON  reduzir usando a regra 39 (assigner)
    $padrão   reduzir usando a regra 37 (statement)

    statement    ir ao estado 109
    assigner     ir ao estado 92
    conditional  ir ao estado 93
    loop         ir ao estado 94
    break        ir ao estado 95
    continue     ir ao estado 96
    return       ir ao estado 97
    $@14         ir ao estado 98
    funccall     ir ao estado 99


Estado 95

   35 statement: break .

    $padrão  reduzir usando a regra 35 (statement)


Estado 96

   36 statement: continue .

    $padrão  reduzir usando a regra 36 (statement)


Estado 97

   34 statement: return .

    $padrão  reduzir usando a regra 34 (statement)


Estado 98

   47 return: $@14 . RETURN_T expr SEMICOLON

    RETURN_T  deslocar, e ir ao estado 110


Estado 99

   30 $@12: . %empty
   31 statement: funccall . $@12 SEMICOLON statement

    $padrão  reduzir usando a regra 30 ($@12)

    $@12  ir ao estado 111


Estado 100

   38 assigner: ID ASSIGN . expr
   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 112
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 101

   40 conditional: IF_T LPARENT . expr RPARENT block ELSE_T block
   41            | IF_T LPARENT . expr RPARENT block
   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 113
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 102

   43 loop: WHILE_T $@13 . LPARENT expr RPARENT block

    LPARENT  deslocar, e ir ao estado 114


Estado 103

   44 break: BREAK_T SEMICOLON .

    $padrão  reduzir usando a regra 44 (break)


Estado 104

   45 continue: CONTINUE_T SEMICOLON .

    $padrão  reduzir usando a regra 45 (continue)


Estado 105

   21 blockstatements: decvar blockstatements .

    $padrão  reduzir usando a regra 21 (blockstatements)


Estado 106

   20 block: LBRACE $@9 blockstatements RBRACE .

    $padrão  reduzir usando a regra 20 (block)


Estado 107

   29 statement: assigner $@11 . SEMICOLON statement

    SEMICOLON  deslocar, e ir ao estado 115


Estado 108

   32 statement: conditional statement .

    $padrão  reduzir usando a regra 32 (statement)


Estado 109

   33 statement: loop statement .

    $padrão  reduzir usando a regra 33 (statement)


Estado 110

   47 return: $@14 RETURN_T . expr SEMICOLON
   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [SEMICOLON, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 116
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 111

   31 statement: funccall $@12 . SEMICOLON statement

    SEMICOLON  deslocar, e ir ao estado 117


Estado 112

   38 assigner: ID ASSIGN expr .  [SEMICOLON]
   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    PLUS           deslocar, e ir ao estado 31
    MINUS          deslocar, e ir ao estado 32
    MULTIPLY       deslocar, e ir ao estado 33
    DIVIDER        deslocar, e ir ao estado 34
    LESSTHAN       deslocar, e ir ao estado 35
    BIGGERTHAN     deslocar, e ir ao estado 36
    LESSOREQUAL    deslocar, e ir ao estado 37
    BIGGEROREQUAL  deslocar, e ir ao estado 38
    EQUAL          deslocar, e ir ao estado 39
    NOTEQUAL       deslocar, e ir ao estado 40
    AND            deslocar, e ir ao estado 41
    OR             deslocar, e ir ao estado 42

    $padrão  reduzir usando a regra 38 (assigner)


Estado 113

   40 conditional: IF_T LPARENT expr . RPARENT block ELSE_T block
   41            | IF_T LPARENT expr . RPARENT block
   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    RPARENT        deslocar, e ir ao estado 118
    PLUS           deslocar, e ir ao estado 31
    MINUS          deslocar, e ir ao estado 32
    MULTIPLY       deslocar, e ir ao estado 33
    DIVIDER        deslocar, e ir ao estado 34
    LESSTHAN       deslocar, e ir ao estado 35
    BIGGERTHAN     deslocar, e ir ao estado 36
    LESSOREQUAL    deslocar, e ir ao estado 37
    BIGGEROREQUAL  deslocar, e ir ao estado 38
    EQUAL          deslocar, e ir ao estado 39
    NOTEQUAL       deslocar, e ir ao estado 40
    AND            deslocar, e ir ao estado 41
    OR             deslocar, e ir ao estado 42


Estado 114

   43 loop: WHILE_T $@13 LPARENT . expr RPARENT block
   48 expr: . unop expr
   49     | . LPARENT expr RPARENT
   50     | . funccall
   51     | . DEC
   52     | . ID
   53     | . expr PLUS expr
   54     | . expr MINUS expr
   55     | . expr MULTIPLY expr
   56     | . expr DIVIDER expr
   57     | . expr LESSTHAN expr
   58     | . expr LESSOREQUAL expr
   59     | . expr BIGGERTHAN expr
   60     | . expr BIGGEROREQUAL expr
   61     | . expr EQUAL expr
   62     | . expr NOTEQUAL expr
   63     | . expr AND expr
   64     | . expr OR expr
   65     | . %empty  [RPARENT, PLUS, MINUS, MULTIPLY, DIVIDER, LESSTHAN, BIGGERTHAN, LESSOREQUAL, BIGGEROREQUAL, EQUAL, NOTEQUAL, AND, OR]
   66 unop: . MINUS
   67     | . NOT
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID       deslocar, e ir ao estado 18
    DEC      deslocar, e ir ao estado 19
    LPARENT  deslocar, e ir ao estado 20
    MINUS    deslocar, e ir ao estado 21
    NOT      deslocar, e ir ao estado 22

    MINUS     [reduzir usando a regra 65 (expr)]
    $padrão  reduzir usando a regra 65 (expr)

    expr      ir ao estado 119
    unop      ir ao estado 24
    funccall  ir ao estado 25


Estado 115

   29 statement: . assigner $@11 SEMICOLON statement
   29          | assigner $@11 SEMICOLON . statement
   31          | . funccall $@12 SEMICOLON statement
   32          | . conditional statement
   33          | . loop statement
   34          | . return
   35          | . break
   36          | . continue
   37          | . %empty  [RBRACE]
   38 assigner: . ID ASSIGN expr
   39         | . %empty  [SEMICOLON]
   40 conditional: . IF_T LPARENT expr RPARENT block ELSE_T block
   41            | . IF_T LPARENT expr RPARENT block
   43 loop: . WHILE_T $@13 LPARENT expr RPARENT block
   44 break: . BREAK_T SEMICOLON
   45 continue: . CONTINUE_T SEMICOLON
   46 $@14: . %empty  [RETURN_T]
   47 return: . $@14 RETURN_T expr SEMICOLON
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID          deslocar, e ir ao estado 84
    IF_T        deslocar, e ir ao estado 85
    WHILE_T     deslocar, e ir ao estado 86
    BREAK_T     deslocar, e ir ao estado 87
    CONTINUE_T  deslocar, e ir ao estado 88

    RETURN_T   reduzir usando a regra 46 ($@14)
    SEMICOLON  reduzir usando a regra 39 (assigner)
    $padrão   reduzir usando a regra 37 (statement)

    statement    ir ao estado 120
    assigner     ir ao estado 92
    conditional  ir ao estado 93
    loop         ir ao estado 94
    break        ir ao estado 95
    continue     ir ao estado 96
    return       ir ao estado 97
    $@14         ir ao estado 98
    funccall     ir ao estado 99


Estado 116

   47 return: $@14 RETURN_T expr . SEMICOLON
   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    SEMICOLON      deslocar, e ir ao estado 121
    PLUS           deslocar, e ir ao estado 31
    MINUS          deslocar, e ir ao estado 32
    MULTIPLY       deslocar, e ir ao estado 33
    DIVIDER        deslocar, e ir ao estado 34
    LESSTHAN       deslocar, e ir ao estado 35
    BIGGERTHAN     deslocar, e ir ao estado 36
    LESSOREQUAL    deslocar, e ir ao estado 37
    BIGGEROREQUAL  deslocar, e ir ao estado 38
    EQUAL          deslocar, e ir ao estado 39
    NOTEQUAL       deslocar, e ir ao estado 40
    AND            deslocar, e ir ao estado 41
    OR             deslocar, e ir ao estado 42


Estado 117

   29 statement: . assigner $@11 SEMICOLON statement
   31          | . funccall $@12 SEMICOLON statement
   31          | funccall $@12 SEMICOLON . statement
   32          | . conditional statement
   33          | . loop statement
   34          | . return
   35          | . break
   36          | . continue
   37          | . %empty  [RBRACE]
   38 assigner: . ID ASSIGN expr
   39         | . %empty  [SEMICOLON]
   40 conditional: . IF_T LPARENT expr RPARENT block ELSE_T block
   41            | . IF_T LPARENT expr RPARENT block
   43 loop: . WHILE_T $@13 LPARENT expr RPARENT block
   44 break: . BREAK_T SEMICOLON
   45 continue: . CONTINUE_T SEMICOLON
   46 $@14: . %empty  [RETURN_T]
   47 return: . $@14 RETURN_T expr SEMICOLON
   68 funccall: . ID LPARENT RPARENT
   71         | . ID LPARENT $@15 arglist $@16 RPARENT

    ID          deslocar, e ir ao estado 84
    IF_T        deslocar, e ir ao estado 85
    WHILE_T     deslocar, e ir ao estado 86
    BREAK_T     deslocar, e ir ao estado 87
    CONTINUE_T  deslocar, e ir ao estado 88

    RETURN_T   reduzir usando a regra 46 ($@14)
    SEMICOLON  reduzir usando a regra 39 (assigner)
    $padrão   reduzir usando a regra 37 (statement)

    statement    ir ao estado 122
    assigner     ir ao estado 92
    conditional  ir ao estado 93
    loop         ir ao estado 94
    break        ir ao estado 95
    continue     ir ao estado 96
    return       ir ao estado 97
    $@14         ir ao estado 98
    funccall     ir ao estado 99


Estado 118

   20 block: . LBRACE $@9 blockstatements RBRACE
   40 conditional: IF_T LPARENT expr RPARENT . block ELSE_T block
   41            | IF_T LPARENT expr RPARENT . block

    LBRACE  deslocar, e ir ao estado 80

    block  ir ao estado 123


Estado 119

   43 loop: WHILE_T $@13 LPARENT expr . RPARENT block
   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULTIPLY expr
   56     | expr . DIVIDER expr
   57     | expr . LESSTHAN expr
   58     | expr . LESSOREQUAL expr
   59     | expr . BIGGERTHAN expr
   60     | expr . BIGGEROREQUAL expr
   61     | expr . EQUAL expr
   62     | expr . NOTEQUAL expr
   63     | expr . AND expr
   64     | expr . OR expr

    RPARENT        deslocar, e ir ao estado 124
    PLUS           deslocar, e ir ao estado 31
    MINUS          deslocar, e ir ao estado 32
    MULTIPLY       deslocar, e ir ao estado 33
    DIVIDER        deslocar, e ir ao estado 34
    LESSTHAN       deslocar, e ir ao estado 35
    BIGGERTHAN     deslocar, e ir ao estado 36
    LESSOREQUAL    deslocar, e ir ao estado 37
    BIGGEROREQUAL  deslocar, e ir ao estado 38
    EQUAL          deslocar, e ir ao estado 39
    NOTEQUAL       deslocar, e ir ao estado 40
    AND            deslocar, e ir ao estado 41
    OR             deslocar, e ir ao estado 42


Estado 120

   29 statement: assigner $@11 SEMICOLON statement .

    $padrão  reduzir usando a regra 29 (statement)


Estado 121

   47 return: $@14 RETURN_T expr SEMICOLON .

    $padrão  reduzir usando a regra 47 (return)


Estado 122

   31 statement: funccall $@12 SEMICOLON statement .

    $padrão  reduzir usando a regra 31 (statement)


Estado 123

   40 conditional: IF_T LPARENT expr RPARENT block . ELSE_T block
   41            | IF_T LPARENT expr RPARENT block .  [ID, IF_T, WHILE_T, BREAK_T, CONTINUE_T, RETURN_T, RBRACE, SEMICOLON]

    ELSE_T  deslocar, e ir ao estado 125

    $padrão  reduzir usando a regra 41 (conditional)


Estado 124

   20 block: . LBRACE $@9 blockstatements RBRACE
   43 loop: WHILE_T $@13 LPARENT expr RPARENT . block

    LBRACE  deslocar, e ir ao estado 80

    block  ir ao estado 126


Estado 125

   20 block: . LBRACE $@9 blockstatements RBRACE
   40 conditional: IF_T LPARENT expr RPARENT block ELSE_T . block

    LBRACE  deslocar, e ir ao estado 80

    block  ir ao estado 127


Estado 126

   43 loop: WHILE_T $@13 LPARENT expr RPARENT block .

    $padrão  reduzir usando a regra 43 (loop)


Estado 127

   40 conditional: IF_T LPARENT expr RPARENT block ELSE_T block .

    $padrão  reduzir usando a regra 40 (conditional)
